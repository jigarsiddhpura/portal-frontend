[{"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\index.js":"1","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\App.js":"2","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\Courses.jsx":"4","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\LandingPage.jsx":"5","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\Login.jsx":"6","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\Signup.jsx":"7","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\ResponsiveDrawer.jsx":"8","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\Footer.jsx":"9","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\Header.jsx":"10","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\landingNavBar.jsx":"11","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\NavBar.jsx":"12","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\UserProfile.jsx":"13","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\Textarea.jsx":"14","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\NavBarProfessor.jsx":"15","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\ProfessorProfile.jsx":"16"},{"size":552,"mtime":1682844568363,"results":"17","hashOfConfig":"18"},{"size":1510,"mtime":1683440754003,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1682844568364,"results":"20","hashOfConfig":"18"},{"size":3892,"mtime":1682926936123,"results":"21","hashOfConfig":"18"},{"size":15417,"mtime":1683167660748,"results":"22","hashOfConfig":"18"},{"size":8735,"mtime":1682844568337,"results":"23","hashOfConfig":"18"},{"size":15220,"mtime":1682844568338,"results":"24","hashOfConfig":"18"},{"size":9695,"mtime":1682844568366,"results":"25","hashOfConfig":"18"},{"size":2359,"mtime":1682844568365,"results":"26","hashOfConfig":"18"},{"size":1485,"mtime":1683123011456,"results":"27","hashOfConfig":"18"},{"size":699,"mtime":1683104573418,"results":"28","hashOfConfig":"18"},{"size":665,"mtime":1683104378833,"results":"29","hashOfConfig":"18"},{"size":3579,"mtime":1683229689217,"results":"30","hashOfConfig":"18"},{"size":564,"mtime":1683447593596,"results":"31","hashOfConfig":"18"},{"size":681,"mtime":1683440690087,"results":"32","hashOfConfig":"18"},{"size":4979,"mtime":1683449681931,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"12wbo4v",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"37"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\index.js",[],[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\App.js",["89"],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\Courses.jsx",["90","91","92","93","94","95","96"],[],"import ResponsiveDrawer from \"../utility/ResponsiveDrawer\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Button from \"@mui/material/Button\";\r\nimport courseImg from \"../images/courseImg.png\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport AccessTimeFilledOutlinedIcon from \"@mui/icons-material/AccessTimeFilledOutlined\";\r\nimport StarHalfIcon from \"@mui/icons-material/StarHalf\";\r\nimport * as React from \"react\";\r\nimport { Paper } from \"@mui/material\";\r\nimport star from \"../images/star.png\";\r\nimport time from \"../images/time.png\";\r\nimport Footer from \"../utility/Footer\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Courses = () => {\r\n  // checking local Storage after each update\r\n  var [isDrawerOpen, setIsDrawerOpen] = useState(true);\r\n\r\n  window.onstorage = () => {\r\n    setIsDrawerOpen(JSON.parse(window.localStorage.getItem(\"drawerOpen\")));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ResponsiveDrawer />\r\n      <div\r\n        className=\"container\"\r\n        style={{ marginLeft: isDrawerOpen ? \"245px\" : \"10px\" }}\r\n      >\r\n        <Card\r\n          sx={{\r\n            padding: \"1rem\",\r\n            maxWidth: 345,\r\n            width: \"22rem\",\r\n            height: \"22rem\",\r\n          }}\r\n        >\r\n          <CardMedia\r\n            component=\"img\"\r\n            alt=\"green iguana\"\r\n            height=\"140\"\r\n            style={{ borderRadius: \"0.5rem\", marginBottom: \"0\" }}\r\n            image={courseImg}\r\n          />\r\n\r\n          <CardContent>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                marginBottom: \"1rem\",\r\n              }}\r\n            >\r\n              <button\r\n                style={{\r\n                  width: \"8rem\",\r\n                  height: \"1.8rem\",\r\n                  color: \"#85D1A0\",\r\n                  backgroundColor: \"rgb(215 236 222)\",\r\n                  borderRadius: \"0.4rem\",\r\n                  margin: \"0 1.5rem 0 0\",\r\n                  border: \"none\",\r\n                }}\r\n              >\r\n                Web \r\n              </button>\r\n              <span style={{ textAlign: \"right\" }}>Harvard University</span>\r\n            </div>\r\n\r\n            <Typography\r\n              style={{\r\n                fontFamily: \"Inter\",\r\n                fontStyle: \"normal\",\r\n                fontWeight: \"600\",\r\n                fontSize: \"1.2rem\",\r\n                textAlign: \"start\",\r\n                // float:'left'\r\n                // lineHeight: \"1rem\",\r\n              }}\r\n            >\r\n              ReactJS with Node\r\n            </Typography>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                margin: \"1rem 0\",\r\n              }}\r\n            >\r\n              <img\r\n                src={star}\r\n                alt=\"star\"\r\n                style={{ width: \"1.3rem\", height: \"1.3rem\" }}\r\n              />\r\n              <span style={{ margin: \"0 20px 0 4px\" }}>4.5</span>\r\n              <img\r\n                src={time}\r\n                alt=\"time\"\r\n                style={{ width: \"1.3rem\", height: \"1.3rem\" }}\r\n              />\r\n              <span style={{ margin: \"0 20px 0 4px\" }}>3 months</span>\r\n              <Button\r\n                style={{\r\n                  borderRadius: \"4px\",\r\n                  backgroundColor: \"#85D1A0\",\r\n                  color: \"white\",\r\n                  // marginLeft:'1.5rem'\r\n                }}\r\n              >\r\n                Interested\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Courses;\r\n","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\LandingPage.jsx",[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\Login.jsx",["97","98","99","100","101","102"],[],"import { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useEffect } from \"react\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport EmailOutlinedIcon from \"@mui/icons-material/EmailOutlined\";\r\nimport React from \"react\";\r\nimport \"./Login.css\";\r\nimport undrawImg from \"../images/undraw_Welcome_.png\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst Login = () => {\r\n  // formik\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  // adding event listener for responsiveness\r\n  const [width, setWindowWidth] = useState(0);\r\n\r\n  const color = \"#4A2145\";\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    return () => window.removeEventListener(\"resize\", updateDimensions);\r\n  }, []);\r\n\r\n  const updateDimensions = () => {\r\n    const width = window.innerWidth;\r\n    setWindowWidth(width);\r\n  };\r\n\r\n  const responsiveness = { responsive: width < 1043 };\r\n  const resp = responsiveness.responsive;\r\n\r\n  const responsiveness2 = { responsive: width < 850 };\r\n  const resp2 = responsiveness2.responsive;\r\n\r\n  const responsiveness3 = { responsive: width >= 850 && width < 900 };\r\n  const resp3 = responsiveness3.responsive;\r\n  //\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const SignupButton = styled(Button)({\r\n    backgroundColor: \"#85D1A0\",\r\n    margin: \"1rem\",\r\n    borderRadius: \"0.3rem\",\r\n    marginLeft: \"1.2rem\",\r\n    textDecoration: \"none\",\r\n    padding: \"12px 15px \",\r\n    width: resp ? \"22rem\" :  \"28rem\",\r\n    height: \"3.1875rem\",\r\n    color: \"white\",\r\n    fontSize: \"1rem\",\r\n    position: \"relative\",\r\n    right: resp ? \"\" : \"1.4rem\",\r\n    \"&:hover\": { backgroundColor: \"#5E9387\", color: \"white\" },\r\n  });\r\n\r\n  const Login = () => {\r\n    return (\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        className=\"login_main_container\"\r\n        style={{\r\n          display: resp2 ? \"flex\" : \"\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            // border : '2px solid red',\r\n            position:'relative',\r\n            top : resp2 ?  '6rem' : '',\r\n          }}\r\n        >\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Box\r\n              sx={{\r\n                maxWidth: \"31.25rem\",\r\n                width: \"31.25rem\",\r\n                height: \"31.25rem\",\r\n                // border: \"2px solid black\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: resp ? \"center\" : \"flex-start\",\r\n                padding: \"1rem\",\r\n                position: \"relative\",\r\n                // left:'4rem',\r\n              }}\r\n            >\r\n              <h1 style={{ margin: \"2rem 0\", color: \"#4A2145\" }}>Sign In</h1>\r\n              <FormControl\r\n                style={{\r\n                  margin:\r\n                    formik.touched.email && formik.errors.email\r\n                      ? \"0\"\r\n                      : \"0 0 1rem 0\",\r\n                  width: resp ? \"40ch\" : \"50ch\",\r\n                }}\r\n                variant=\"outlined\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Email\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-email\"\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <EmailOutlinedIcon />\r\n                    </InputAdornment>\r\n                  }\r\n                  type=\"email\"\r\n                  label=\"Email\"\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  required\r\n                />\r\n              </FormControl>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div style={{ color: \"red\", marginBottom: \"2rem\" }}>\r\n                  {formik.errors.email}\r\n                </div>\r\n              ) : null}\r\n\r\n              <FormControl\r\n                sx={{ width: resp ? \"40ch\" : \"50ch\", margin: \"1rem 0 0.5 0\" }}\r\n                variant=\"outlined\"\r\n                //   value={user.password}\r\n                //   onChange={handleChange}\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.password && Boolean(formik.errors.password)\r\n                }\r\n                helperText={formik.touched.password && formik.errors.password}\r\n                required\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Password\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        // onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                      >\r\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <div style={{ color: \"red\" }}>{formik.errors.password}</div>\r\n              ) : null}\r\n\r\n              <div style={{ display: \"flex\" }}>\r\n                <SignupButton type=\"submit\">Log in</SignupButton>\r\n              </div>\r\n\r\n              <div style={{ }}>\r\n                <span style={{ color: \"gray\", margin: \"0.6rem 0\" }}>\r\n                  Don't have an account?\r\n                  <Link to=\"/Signup\" style={{ textDecoration: \"none\" }}>\r\n                    <a\r\n                      href=\"/\"\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"#4A2145\",\r\n                        margin: \"0 0.7rem\",\r\n                        fontWeight: \"32.25rem\",\r\n                      }}\r\n                      // onClick={changeFRegStat}\r\n                    >\r\n                      Sign Up\r\n                    </a>\r\n                  </Link>\r\n                </span>\r\n              </div>\r\n            </Box>\r\n          </form>\r\n        </Grid>\r\n        <Grid item xs={6} className=\"img1 c\">\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              position:'relative',\r\n              top:'10%'\r\n            }}\r\n          >\r\n            <p id=\"internText\">Internship</p>\r\n            <img src={undrawImg} alt=\"internship_image\" />\r\n            <h3 style={{ color: \"white\", margin: \"2rem 0 0.5rem 0\" }}>\r\n              Welcome Back\r\n            </h3>\r\n            <p style={{ color: \"white\", margin: \"0\" }}>\r\n              Just a couple of clicks and we start\r\n            </p>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Login />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\Signup.jsx",["103","104","105","106","107","108","109"],[],"import * as yup from \"yup\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useEffect } from \"react\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport EmailOutlinedIcon from \"@mui/icons-material/EmailOutlined\";\r\nimport { blue } from \"@mui/material/colors\";\r\nimport React from \"react\";\r\nimport \"./Login.css\";\r\nimport undrawImg from \"../images/undraw_Welcome_.png\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst validationSchema = yup.object({\r\n  firstName: yup\r\n    .string(\"Enter your first Name\")\r\n    .max(12, \"Must be 15 characters or less\")\r\n    .required(\"Required\"),\r\n  lastName: yup\r\n    .string(\"Enter your last Name\")\r\n    .max(20, \"Must be 20 characters or less\")\r\n    .required(\"Required\"),\r\n  sapid: yup\r\n    .string(\"Enter your SapId\")\r\n    .min(11, \"Must be 11 characters only\")\r\n    .required(\"Required\"),\r\n  contact: yup\r\n    .string(\"Enter your last Name\")\r\n    .matches(phoneRegExp, \"Contact in not valid\")\r\n    .required(\"Required\"),\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n  confirmPassword: yup\r\n    .string(\"Confirm Password\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst Signup = () => {\r\n  // adding event listener for responsiveness\r\n  const [width, setWindowWidth] = useState(0);\r\n\r\n  const color = \"#4A2145\";\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    return () => window.removeEventListener(\"resize\", updateDimensions);\r\n  }, []);\r\n\r\n  const updateDimensions = () => {\r\n    const width = window.innerWidth;\r\n    setWindowWidth(width);\r\n  };\r\n\r\n  const responsiveness = { responsive: width < 1043 };\r\n  const resp = responsiveness.responsive;\r\n\r\n  const responsiveness2 = { responsive: width < 900 };\r\n  const resp2 = responsiveness2.responsive;\r\n  //\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      sapid: \"\",\r\n      contact: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  const CreateButton = styled(Button)({\r\n    backgroundColor: \"#85D1A0\",\r\n    borderRadius: \"0.3rem\",\r\n    textDecoration: \"none\",\r\n    padding: \"12px 15px \",\r\n    width: \"27.8rem\",\r\n    height: \"3.1875rem\",\r\n    color: \"white\",\r\n    fontSize: \"0.8rem\",\r\n    marginTop: \"0.5rem\",\r\n    position:'relative',\r\n    right: resp? '' : '5.5rem',\r\n    \"&:hover\": { backgroundColor: \"#5E9387\", color: \"white\" },\r\n  });\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const [showCPassword, setShowCPassword] = useState(false);\r\n  const handleClickShowCPassword = () => setShowCPassword((show) => !show);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={0} className=\"signUp_main_container\"\r\n      style = {{overflow : 'hidden'}}\r\n      >\r\n        <Grid item xs={6} className=\"img2 c\">\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              position:'relative',\r\n              top:'10%'\r\n            }}\r\n          >\r\n            <p id=\"internText\">Internship</p>\r\n            <img src={undrawImg} alt=\"internship_image\" />\r\n            <h3 style={{ color: \"white\", margin: \"2rem 0 0.5rem 0\" }}>\r\n              Welcome Aboard\r\n            </h3>\r\n            <p style={{ color: \"white\", margin: \"0\" }}>\r\n              Just a couple of clicks and we start\r\n            </p>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: 'center',\r\n            // position : 'relative',\r\n            // left: resp2 ? '20rem' : ''\r\n          }}\r\n        >\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Box\r\n              sx={{\r\n                maxWidth: '31.25rem',\r\n                width: resp ? '100vw' : '31.25rem',\r\n                height: '31.25rem',\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems:\"flex-start\",\r\n                justifyContent : 'center',\r\n                padding:  \"1rem\",\r\n                position:resp ? 'relative' : '',\r\n                left:resp2 ? '26%' : '2rem',\r\n\r\n              }}\r\n            >\r\n              <h2 style={{ margin: \"0.4rem 0\" , color:'#4A2145'}}>Create new account</h2>\r\n              <span style={{ color: \"gray\", margin: \"0.4rem 0\" }}>\r\n                Already A Member?{\" \"}\r\n                <Link to=\"/Login\" style={{textDecoration: \"none\",}}>\r\n                  <a href=\"/Login\" style={{ textDecoration: \"none\", color: '#4A2145', fontWeight:500 }}>\r\n                    Log in\r\n                  </a>{\" \"}\r\n                </Link>\r\n              </span>\r\n              <div style={{ display: \"flex\" }}>\r\n                <div>\r\n                  <TextField\r\n                    id=\"firstName\"\r\n                    required\r\n                    type=\"text\"\r\n                    label=\"FirstName\"\r\n                    placeholder=\"First Name\"\r\n                    name=\"firstName\"\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.firstName &&\r\n                      Boolean(formik.errors.firstName)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.firstName && formik.errors.firstName\r\n                    }\r\n                    style={{\r\n                      margin: \"1rem 0\",\r\n                      width:   resp ? \"20ch\" : \"24ch\",\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    id=\"lname\"\r\n                    type=\"text\"\r\n                    label=\"Lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    //   value={signupUser.lname}\r\n                    //   onChange={signupHandleChange}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.lastName && Boolean(formik.errors.lastName)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.lastName && formik.errors.lastName\r\n                    }\r\n                    required\r\n                    style={{ margin: \"1rem \", width: resp ? \"20ch\" : \"24ch\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <FormControl\r\n                style={{ margin: \"0.5rem 0\", width: resp ? \"42ch\" : \"50ch\" }}\r\n                variant=\"outlined\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Email\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-email\"\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <EmailOutlinedIcon />\r\n                    </InputAdornment>\r\n                  }\r\n                  type=\"email\"\r\n                  label=\"Email\"\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  required\r\n                />\r\n              </FormControl>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div style={{ color: \"red\", marginBottom: \"0.5rem\" }}>\r\n                  {formik.errors.email}\r\n                </div>\r\n              ) : null}\r\n\r\n              <div style={{ display: \"flex\" }}>\r\n                <TextField\r\n                  id=\"sapid\"\r\n                  required\r\n                  type=\"text\"\r\n                  label=\"Sap ID\"\r\n                  placeholder=\"Sap Id\"\r\n                  name=\"sapid\"\r\n                  onChange={formik.handleChange}\r\n                  error={formik.touched.sapid && Boolean(formik.errors.sapid)}\r\n                  helperText={formik.touched.sapid && formik.errors.sapid}\r\n                  style={{\r\n                    margin: \"1rem 0\",\r\n                    width: resp ? \"20ch\" : \"24ch\",\r\n                  }}\r\n                />\r\n                <TextField\r\n                  id=\"lname\"\r\n                  type=\"text\"\r\n                  label=\"contact\"\r\n                  placeholder=\"contact\"\r\n                  name=\"contact\"\r\n                  onChange={formik.handleChange}\r\n                  error={\r\n                    formik.touched.contact && Boolean(formik.errors.contact)\r\n                  }\r\n                  helperText={formik.touched.contact && formik.errors.contact}\r\n                  required\r\n                  style={{ margin: \"1rem \", width: resp ? \"20ch\" : \"24ch\" }}\r\n                />\r\n              </div>\r\n\r\n              <div style={{ display: \"flex\" }}>\r\n                <div\r\n                  style={{\r\n                    position:\r\n                      formik.touched.password && formik.errors.password\r\n                        ? \"relative\"\r\n                        : \"\",\r\n                  }}\r\n                >\r\n                  <FormControl\r\n                    sx={{ margin: \"1rem 0 \", width: resp ? \"20ch\" : \"24ch\" }}\r\n                    variant=\"outlined\"\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.password && Boolean(formik.errors.password)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.password && formik.errors.password\r\n                    }\r\n                    required\r\n                  >\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                      Password\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                      id=\"outlined-adornment-password\"\r\n                      label=\"Password\"\r\n                      name=\"password\"\r\n                      type={showPassword ? \"text\" : \"password\"}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            // onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                          >\r\n                            {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                    />\r\n                  </FormControl>\r\n                  {formik.touched.password && formik.errors.password ? (\r\n                    <div\r\n                      style={{\r\n                        color: \"red\",\r\n                        margin: \"-0.7rem 2rem 1rem 0\",\r\n                        fontSize: \"0.9rem\",\r\n                        width: resp ? \"20ch\" : \"24ch\" ,\r\n                      }}\r\n                    >\r\n                      {formik.errors.password}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    position:\r\n                      formik.touched.confirmPassword &&\r\n                      formik.errors.confirmPassword\r\n                        ? \"relative\"\r\n                        : \"relative\",\r\n                    left:'1rem',\r\n                  }}\r\n                >\r\n                  <FormControl\r\n                    sx={{ margin: \"1rem 0 \", width: resp ? \"20ch\" : \"24ch\" }}\r\n                    variant=\"outlined\"\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.confirmPassword && formik.errors.confirmPassword\r\n                    }\r\n                    required\r\n                  >\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                      Password\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                      id=\"outlined-adornment-password\"\r\n                      label=\"Password\"\r\n                      name=\"confirmPassword\"\r\n                      type={showPassword ? \"text\" : \"password\"}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            // onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                          >\r\n                            {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                    />\r\n                  </FormControl>\r\n                  {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\r\n                    <div\r\n                      style={{\r\n                        color: \"red\",\r\n                        margin: \"-0.7rem 2rem 1rem 0\",\r\n                        fontSize: \"0.9rem\",\r\n                        alignContent: \"start\",\r\n                      }}\r\n                    >\r\n                      {formik.errors.confirmPassword}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  width:resp ? \"42ch\" : \"70ch\",\r\n                }}\r\n              >\r\n                <CreateButton type=\"submit\">Create account</CreateButton>\r\n              </div>\r\n            </Box>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\ResponsiveDrawer.jsx",[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\Footer.jsx",["110","111","112","113"],[],"import './Footer.css'\r\nimport React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return ( \r\n        <>\r\n        <hr/>\r\n    <footer class=\"site-footer\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-12 col-md-6 about\">\r\n            <h6 class=\"highlight\">Internship Portal</h6>\r\n            <p class=\"text-justify\">A platform dedicated to providing students with valuable opportunities to enhance their academic and professional skills. Internship Portal offer a diverse range of internships, courses, and research paper writing opportunities under experienced professors.  Join us today and take the first step towards a successful career! </p>\r\n          </div>\r\n\r\n          <div class=\"col-xs-6 col-md-3\">\r\n            <h6>Courses</h6>\r\n            <ul class=\"footer-links\">\r\n              <li><a href=\"/\">Classroom courses</a></li>\r\n              <li><a href=\"/\">Online courses</a></li>\r\n              <li><a href=\"/\">E-learning courses</a></li>\r\n              <li><a href=\"/\">Video courses</a></li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div class=\"col-xs-6 col-md-3\">\r\n            <h6>Quick Links</h6>\r\n            <ul class=\"footer-links\">\r\n              <li><a href=\"/\">Home</a></li>\r\n              <li><a href=\"/\">Internships</a></li>\r\n              <li><a href=\"/\">All Courses</a></li>\r\n              <li><a href=\"/\">Interview Prep</a></li>\r\n              <li><a href=\"/\">Programs</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <hr/>\r\n      </div>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8 col-sm-6 col-xs-12\">\r\n            <p class=\"copyright-text\">Copyright &copy; 2023 Internship Portal | All Rights Reserved \r\n            </p>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-xs-12\">\r\n            <ul class=\"social-icons\">\r\n              <li><a Class=\"facebook\" href=\"#\"><i class=\"fa fa-facebook\"></i></a></li>\r\n              <li><a Class=\"twitter\" href=\"#\"><i class=\"fa fa-twitter\"></i></a></li>\r\n              <li><a Class=\"dribbble\" href=\"#\"><i class=\"fa fa-dribbble\"></i></a></li>\r\n              <li><a Class=\"linkedin\" href=\"#\"><i class=\"fa fa-linkedin\"></i></a></li>   \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n</footer>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Footer;","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\Header.jsx",["114","115","116","117","118"],[],"import React from 'react'\r\nimport NavBar from './NavBar'\r\nimport './Header.css'\r\nimport lines1 from \"../images/bg-lines1.svg\"\r\nimport lines2 from \"../images/bg-lines2.svg\"\r\nimport searchicon from \"../images/search-icon.svg\"\r\nimport humanicon from \"../images/humanicon.svg\"\r\nimport highlightedunderline from \"../images/highlightedunderline.svg\"\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div style={{height: '33rem', backgroundColor: '#E8FCFE'}}>\r\n\r\n        <NavBar />\r\n        <img src={lines1} className='bg-lines1'></img>\r\n        <img src={lines2} className='bg-lines2'></img>\r\n\r\n        <div className='input-rectangle'>\r\n          <img src={searchicon} className='search-icon'></img>\r\n          <input placeholder='Course name or keyword' className='input1'></input>\r\n          <div className='vertical-line'></div>\r\n          <img src={humanicon} className='human-icon'></img>\r\n          <input placeholder='University' className='input2' ></input>\r\n          <button className='search-button'>\r\n            Search\r\n          </button>\r\n        </div>\r\n        <div className='text'>Popular : Machine Learning by Harvard, xyz course from Stanford</div>\r\n        <div className='subtitle'>Enhance your skills by learning courses from the faculty in top universities</div>\r\n        <div className='title'>Find your&nbsp; <span> dream course</span></div>\r\n        <img src={highlightedunderline} className='highlightedunderline'></img>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Header","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\landingNavBar.jsx",[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\NavBar.jsx",["119"],[],"import React from 'react'\r\nimport './NavBar.css'\r\nimport dropdown from \"../images/dropdown.svg\"\r\n\r\nconst NavBar = () => {\r\n  return (\r\n   \r\n      <div className='navbar-rectangle'>\r\n        <ul>\r\n          <li className='logo'>Internship Portal</li>\r\n          <li className='home'>Home</li>\r\n          <li className='courses'>Courses</li>\r\n          <li className='research'>Research</li>\r\n          <li className='interview'>Interview</li>\r\n          <img src={dropdown} className='dropdown'></img>\r\n          <li className='username'>Kashish Gandhi</li>\r\n          <li className='profile-pic'></li>\r\n        </ul>\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nexport default NavBar","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\UserProfile.jsx",["120","121","122","123","124"],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\Textarea.jsx",[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\NavBarProfessor.jsx",["125"],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\ProfessorProfile.jsx",["126","127"],[],{"ruleId":"128","severity":1,"message":"129","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":12},{"ruleId":"128","severity":1,"message":"132","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":19},{"ruleId":"128","severity":1,"message":"133","line":9,"column":8,"nodeType":"130","messageId":"131","endLine":9,"endColumn":12},{"ruleId":"128","severity":1,"message":"134","line":10,"column":8,"nodeType":"130","messageId":"131","endLine":10,"endColumn":11},{"ruleId":"128","severity":1,"message":"135","line":11,"column":8,"nodeType":"130","messageId":"131","endLine":11,"endColumn":36},{"ruleId":"128","severity":1,"message":"136","line":12,"column":8,"nodeType":"130","messageId":"131","endLine":12,"endColumn":20},{"ruleId":"128","severity":1,"message":"137","line":14,"column":10,"nodeType":"130","messageId":"131","endLine":14,"endColumn":15},{"ruleId":"128","severity":1,"message":"138","line":18,"column":10,"nodeType":"130","messageId":"131","endLine":18,"endColumn":19},{"ruleId":"128","severity":1,"message":"139","line":5,"column":3,"nodeType":"130","messageId":"131","endLine":5,"endColumn":12},{"ruleId":"128","severity":1,"message":"140","line":15,"column":10,"nodeType":"130","messageId":"131","endLine":15,"endColumn":21},{"ruleId":"128","severity":1,"message":"141","line":15,"column":23,"nodeType":"130","messageId":"131","endLine":15,"endColumn":36},{"ruleId":"128","severity":1,"message":"142","line":16,"column":16,"nodeType":"130","messageId":"131","endLine":16,"endColumn":27},{"ruleId":"128","severity":1,"message":"143","line":53,"column":9,"nodeType":"130","messageId":"131","endLine":53,"endColumn":14},{"ruleId":"128","severity":1,"message":"144","line":73,"column":9,"nodeType":"130","messageId":"131","endLine":73,"endColumn":14},{"ruleId":"128","severity":1,"message":"140","line":16,"column":10,"nodeType":"130","messageId":"131","endLine":16,"endColumn":21},{"ruleId":"128","severity":1,"message":"141","line":16,"column":23,"nodeType":"130","messageId":"131","endLine":16,"endColumn":36},{"ruleId":"128","severity":1,"message":"142","line":17,"column":16,"nodeType":"130","messageId":"131","endLine":17,"endColumn":27},{"ruleId":"128","severity":1,"message":"145","line":20,"column":10,"nodeType":"130","messageId":"131","endLine":20,"endColumn":14},{"ruleId":"128","severity":1,"message":"143","line":64,"column":9,"nodeType":"130","messageId":"131","endLine":64,"endColumn":14},{"ruleId":"128","severity":1,"message":"146","line":118,"column":10,"nodeType":"130","messageId":"131","endLine":118,"endColumn":23},{"ruleId":"128","severity":1,"message":"147","line":119,"column":9,"nodeType":"130","messageId":"131","endLine":119,"endColumn":33},{"ruleId":"148","severity":1,"message":"149","line":48,"column":19,"nodeType":"150","endLine":48,"endColumn":48},{"ruleId":"148","severity":1,"message":"149","line":49,"column":19,"nodeType":"150","endLine":49,"endColumn":47},{"ruleId":"148","severity":1,"message":"149","line":50,"column":19,"nodeType":"150","endLine":50,"endColumn":48},{"ruleId":"148","severity":1,"message":"149","line":51,"column":19,"nodeType":"150","endLine":51,"endColumn":48},{"ruleId":"151","severity":1,"message":"152","line":15,"column":9,"nodeType":"150","endLine":15,"endColumn":49},{"ruleId":"151","severity":1,"message":"152","line":16,"column":9,"nodeType":"150","endLine":16,"endColumn":49},{"ruleId":"151","severity":1,"message":"152","line":19,"column":11,"nodeType":"150","endLine":19,"endColumn":57},{"ruleId":"151","severity":1,"message":"152","line":22,"column":11,"nodeType":"150","endLine":22,"endColumn":55},{"ruleId":"151","severity":1,"message":"152","line":31,"column":9,"nodeType":"150","endLine":31,"endColumn":74},{"ruleId":"151","severity":1,"message":"152","line":15,"column":11,"nodeType":"150","endLine":15,"endColumn":52},{"ruleId":"128","severity":1,"message":"153","line":2,"column":27,"nodeType":"130","messageId":"131","endLine":2,"endColumn":33},{"ruleId":"151","severity":1,"message":"152","line":34,"column":13,"nodeType":"150","endLine":34,"endColumn":82},{"ruleId":"151","severity":1,"message":"152","line":66,"column":15,"nodeType":"150","endLine":66,"endColumn":67},{"ruleId":"151","severity":1,"message":"152","line":79,"column":15,"nodeType":"150","endLine":79,"endColumn":64},{"ruleId":"151","severity":1,"message":"152","line":85,"column":15,"nodeType":"150","endLine":85,"endColumn":64},{"ruleId":"151","severity":1,"message":"152","line":14,"column":12,"nodeType":"150","endLine":14,"endColumn":63},{"ruleId":"151","severity":1,"message":"152","line":13,"column":9,"nodeType":"150","endLine":13,"endColumn":65},{"ruleId":"151","severity":1,"message":"152","line":74,"column":11,"nodeType":"150","endLine":74,"endColumn":81},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'AccessTimeFilledOutlinedIcon' is defined but never used.","'StarHalfIcon' is defined but never used.","'Paper' is defined but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","'createTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'useNavigate' is defined but never used.","'color' is assigned a value but never used.","'resp3' is assigned a value but never used.","'blue' is defined but never used.","'showCPassword' is assigned a value but never used.","'handleClickShowCPassword' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useRef' is defined but never used."]