[{"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\index.js":"1","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\App.js":"3","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\Signup.jsx":"4","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\Login.jsx":"5","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\PostResearch.jsx":"6","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\Courses.jsx":"7","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\ApplyResearch.jsx":"8","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\ProfessorProfile.jsx":"9","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\PostInternship.jsx":"10","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\UserProfile.jsx":"11","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\LandingPage.jsx":"12","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\NavBarProfessor.jsx":"13","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\Header.jsx":"14","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\Footer.jsx":"15","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\docs\\data.ts":"16","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\ResponsiveDrawer.jsx":"17","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\Textarea.jsx":"18","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\landingNavBar.jsx":"19","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\Toggle.js":"20","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\PortalDrawer.js":"21","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\NavBar.jsx":"22","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\FrameComponent.js":"23"},{"size":552,"mtime":1682844568363,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1682844568364,"results":"26","hashOfConfig":"25"},{"size":2081,"mtime":1688659397076,"results":"27","hashOfConfig":"25"},{"size":15224,"mtime":1688325033695,"results":"28","hashOfConfig":"25"},{"size":8716,"mtime":1688325033693,"results":"29","hashOfConfig":"25"},{"size":4214,"mtime":1688325033694,"results":"30","hashOfConfig":"25"},{"size":4175,"mtime":1688657762741,"results":"31","hashOfConfig":"25"},{"size":4217,"mtime":1688325033693,"results":"32","hashOfConfig":"25"},{"size":4979,"mtime":1683449681931,"results":"33","hashOfConfig":"25"},{"size":8080,"mtime":1688325033694,"results":"34","hashOfConfig":"25"},{"size":3579,"mtime":1683229689217,"results":"35","hashOfConfig":"25"},{"size":15511,"mtime":1688327181173,"results":"36","hashOfConfig":"25"},{"size":891,"mtime":1688328206395,"results":"37","hashOfConfig":"25"},{"size":1485,"mtime":1688657753021,"results":"38","hashOfConfig":"25"},{"size":2359,"mtime":1682844568365,"results":"39","hashOfConfig":"25"},{"size":369,"mtime":1683453790774,"results":"40","hashOfConfig":"25"},{"size":9634,"mtime":1688325033698,"results":"41","hashOfConfig":"25"},{"size":564,"mtime":1683447593596,"results":"42","hashOfConfig":"25"},{"size":848,"mtime":1688327115605,"results":"43","hashOfConfig":"25"},{"size":1258,"mtime":1688659156044,"results":"44","hashOfConfig":"25"},{"size":1643,"mtime":1688656805910,"results":"45","hashOfConfig":"25"},{"size":1599,"mtime":1688659362616,"results":"46","hashOfConfig":"25"},{"size":1575,"mtime":1688659274216,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"12wbo4v",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"51"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"51"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"51"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"51"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\index.js",[],[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\App.js",["130"],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\Signup.jsx",["131","132","133","134","135","136","137"],[],"import * as yup from \"yup\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useEffect } from \"react\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport EmailOutlinedIcon from \"@mui/icons-material/EmailOutlined\";\r\nimport { blue } from \"@mui/material/colors\";\r\nimport React from \"react\";\r\nimport \"./Login.css\";\r\nimport undrawImg from \"../images/undraw_Welcome_.png\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst phoneRegExp =\r\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n\r\nconst validationSchema = yup.object({\r\n  firstName: yup\r\n    .string(\"Enter your first Name\")\r\n    .max(12, \"Must be 15 characters or less\")\r\n    .required(\"Required\"),\r\n  lastName: yup\r\n    .string(\"Enter your last Name\")\r\n    .max(20, \"Must be 20 characters or less\")\r\n    .required(\"Required\"),\r\n  sapid: yup\r\n    .string(\"Enter your SapId\")\r\n    .min(11, \"Must be 11 characters only\")\r\n    .required(\"Required\"),\r\n  contact: yup\r\n    .string(\"Enter your last Name\")\r\n    .matches(phoneRegExp, \"Contact in not valid\")\r\n    .required(\"Required\"),\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n  confirmPassword: yup\r\n    .string(\"Confirm Password\")\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst Signup = () => {\r\n  // adding event listener for responsiveness\r\n  const [width, setWindowWidth] = useState(0);\r\n\r\n  const color = \"#4A2145\";\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    return () => window.removeEventListener(\"resize\", updateDimensions);\r\n  }, []);\r\n\r\n  const updateDimensions = () => {\r\n    const width = window.innerWidth;\r\n    setWindowWidth(width);\r\n  };\r\n\r\n  const responsiveness = { responsive: width < 1043 };\r\n  const resp = responsiveness.responsive;\r\n\r\n  const responsiveness2 = { responsive: width < 900 };\r\n  const resp2 = responsiveness2.responsive;\r\n  //\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      sapid: \"\",\r\n      contact: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  const CreateButton = styled(Button)({\r\n    backgroundColor: \"#85D1A0\",\r\n    borderRadius: \"0.3rem\",\r\n    textDecoration: \"none\",\r\n    padding: \"12px 15px \",\r\n    width: \"27.8rem\",\r\n    height: \"3.1875rem\",\r\n    color: \"white\",\r\n    fontSize: \"0.8rem\",\r\n    marginTop: \"0.5rem\",\r\n    position:'relative',\r\n    right: resp? '' : '5.5rem',\r\n    \"&:hover\": { backgroundColor: \"#5E9387\", color: \"white\" },\r\n  });\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const [showCPassword, setShowCPassword] = useState(false);\r\n  const handleClickShowCPassword = () => setShowCPassword((show) => !show);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={0} className=\"signUp_main_container\"\r\n      style = {{overflow : 'hidden'}}\r\n      >\r\n        <Grid item xs={6} className=\"img2 c\">\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              position:'relative',\r\n              top:'10%'\r\n            }}\r\n          >\r\n            <p id=\"internText\">Internship</p>\r\n            <img src={undrawImg} alt=\"internship_image\" />\r\n            <h3 style={{ color: \"white\", margin: \"2rem 0 0.5rem 0\" }}>\r\n              Welcome Aboard\r\n            </h3>\r\n            <p style={{ color: \"white\", margin: \"0\" }}>\r\n              Just a couple of clicks and we start\r\n            </p>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: 'center',\r\n            // position : 'relative',\r\n            // left: resp2 ? '20rem' : ''\r\n          }}\r\n        >\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Box\r\n              sx={{\r\n                maxWidth: '31.25rem',\r\n                width: resp ? '100vw' : '31.25rem',\r\n                height: '31.25rem',\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems:\"flex-start\",\r\n                justifyContent : 'center',\r\n                padding:  \"1rem\",\r\n                position:resp ? 'relative' : '',\r\n                left:resp2 ? '26%' : '2rem',\r\n\r\n              }}\r\n            >\r\n              <h2 style={{ margin: \"0.4rem 0\" , color:'#4A2145'}}>Create new account</h2>\r\n              <span style={{ color: \"gray\", margin: \"0.4rem 0\" }}>\r\n                Already A Member?{\" \"}\r\n                <Link to=\"/Login\" style={{textDecoration: \"none\",}}>\r\n                  <a href=\"/Login\" style={{ textDecoration: \"none\", color: '#4A2145', fontWeight:500 }}>\r\n                    Log in\r\n                  </a>{\" \"}\r\n                </Link>\r\n              </span>\r\n              <div style={{ display: \"flex\" }}>\r\n                <div>\r\n                  <TextField\r\n                    id=\"firstName\"\r\n                    required\r\n                    type=\"text\"\r\n                    label=\"FirstName\"\r\n                    placeholder=\"First Name\"\r\n                    name=\"firstName\"\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.firstName &&\r\n                      Boolean(formik.errors.firstName)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.firstName && formik.errors.firstName\r\n                    }\r\n                    style={{\r\n                      margin: \"1rem 0\",\r\n                      width:   resp ? \"20ch\" : \"24ch\",\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    id=\"lname\"\r\n                    type=\"text\"\r\n                    label=\"Lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    //   value={signupUser.lname}\r\n                    //   onChange={signupHandleChange}\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.lastName && Boolean(formik.errors.lastName)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.lastName && formik.errors.lastName\r\n                    }\r\n                    required\r\n                    style={{ margin: \"1rem \", width: resp ? \"20ch\" : \"24ch\" }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <FormControl\r\n                style={{ margin: \"0.5rem 0\", width: resp ? \"42ch\" : \"50ch\" }}\r\n                variant=\"outlined\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Email\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-email\"\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <EmailOutlinedIcon />\r\n                    </InputAdornment>\r\n                  }\r\n                  type=\"email\"\r\n                  label=\"Email\"\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  required\r\n                />\r\n              </FormControl>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div style={{ color: \"red\", marginBottom: \"0.5rem\" }}>\r\n                  {formik.errors.email}\r\n                </div>\r\n              ) : null}\r\n\r\n              <div style={{ display: \"flex\" }}>\r\n                <TextField\r\n                  id=\"sapid\"\r\n                  required\r\n                  type=\"number\"\r\n                  label=\"Sap ID\"\r\n                  placeholder=\"Sap Id\"\r\n                  name=\"sapid\"\r\n                  onChange={formik.handleChange}\r\n                  error={formik.touched.sapid && Boolean(formik.errors.sapid)}\r\n                  helperText={formik.touched.sapid && formik.errors.sapid}\r\n                  style={{\r\n                    margin: \"1rem 0\",\r\n                    width: resp ? \"20ch\" : \"24ch\",\r\n                  }}\r\n                />\r\n                <TextField\r\n                  id=\"lname\"\r\n                  type=\"number\"\r\n                  label=\"contact\"\r\n                  placeholder=\"contact\"\r\n                  name=\"contact\"\r\n                  onChange={formik.handleChange}\r\n                  error={\r\n                    formik.touched.contact && Boolean(formik.errors.contact)\r\n                  }\r\n                  helperText={formik.touched.contact && formik.errors.contact}\r\n                  required\r\n                  style={{ margin: \"1rem \", width: resp ? \"20ch\" : \"24ch\" }}\r\n                />\r\n              </div>\r\n\r\n              <div style={{ display: \"flex\" }}>\r\n                <div\r\n                  style={{\r\n                    position:\r\n                      formik.touched.password && formik.errors.password\r\n                        ? \"relative\"\r\n                        : \"\",\r\n                  }}\r\n                >\r\n                  <FormControl\r\n                    sx={{ margin: \"1rem 0 \", width: resp ? \"20ch\" : \"24ch\" }}\r\n                    variant=\"outlined\"\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.password && Boolean(formik.errors.password)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.password && formik.errors.password\r\n                    }\r\n                    required\r\n                  >\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                      Password\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                      id=\"outlined-adornment-password\"\r\n                      label=\"Password\"\r\n                      name=\"password\"\r\n                      type={showPassword ? \"text\" : \"password\"}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            // onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                          >\r\n                            {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                    />\r\n                  </FormControl>\r\n                  {formik.touched.password && formik.errors.password ? (\r\n                    <div\r\n                      style={{\r\n                        color: \"red\",\r\n                        margin: \"-0.7rem 2rem 1rem 0\",\r\n                        fontSize: \"0.9rem\",\r\n                        width: resp ? \"20ch\" : \"24ch\" ,\r\n                      }}\r\n                    >\r\n                      {formik.errors.password}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    position:\r\n                      formik.touched.confirmPassword &&\r\n                      formik.errors.confirmPassword\r\n                        ? \"relative\"\r\n                        : \"relative\",\r\n                    left:'1rem',\r\n                  }}\r\n                >\r\n                  <FormControl\r\n                    sx={{ margin: \"1rem 0 \", width: resp ? \"20ch\" : \"24ch\" }}\r\n                    variant=\"outlined\"\r\n                    onChange={formik.handleChange}\r\n                    error={\r\n                      formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.confirmPassword && formik.errors.confirmPassword\r\n                    }\r\n                    required\r\n                  >\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                      Password\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                      id=\"outlined-adornment-password\"\r\n                      label=\"Password\"\r\n                      name=\"confirmPassword\"\r\n                      type={showPassword ? \"text\" : \"password\"}\r\n                      endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            aria-label=\"toggle password visibility\"\r\n                            onClick={handleClickShowPassword}\r\n                            // onMouseDown={handleMouseDownPassword}\r\n                            edge=\"end\"\r\n                          >\r\n                            {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      }\r\n                    />\r\n                  </FormControl>\r\n                  {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\r\n                    <div\r\n                      style={{\r\n                        color: \"red\",\r\n                        margin: \"-0.7rem 2rem 1rem 0\",\r\n                        fontSize: \"0.9rem\",\r\n                        alignContent: \"start\",\r\n                      }}\r\n                    >\r\n                      {formik.errors.confirmPassword}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  width:resp ? \"42ch\" : \"70ch\",\r\n                }}\r\n              >\r\n                <CreateButton type=\"submit\">Create account</CreateButton>\r\n              </div>\r\n            </Box>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\Login.jsx",["138","139","140","141","142","143"],[],"import { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useEffect } from \"react\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport EmailOutlinedIcon from \"@mui/icons-material/EmailOutlined\";\r\nimport React from \"react\";\r\nimport \"./Login.css\";\r\nimport undrawImg from \"../images/undraw_Welcome_.png\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst Login = () => {\r\n  // formik\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  // adding event listener for responsiveness\r\n  const [width, setWindowWidth] = useState(0);\r\n\r\n  const color = \"#4A2145\";\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    return () => window.removeEventListener(\"resize\", updateDimensions);\r\n  }, []);\r\n\r\n  const updateDimensions = () => {\r\n    const width = window.innerWidth;\r\n    setWindowWidth(width);\r\n  };\r\n\r\n  const responsiveness = { responsive: width < 1043 };\r\n  const resp = responsiveness.responsive;\r\n\r\n  const responsiveness2 = { responsive: width < 850 };\r\n  const resp2 = responsiveness2.responsive;\r\n\r\n  const responsiveness3 = { responsive: width >= 850 && width < 900 };\r\n  const resp3 = responsiveness3.responsive;\r\n  //\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n  const SignupButton = styled(Button)({\r\n    backgroundColor: \"#85D1A0\",\r\n    margin: \"1rem\",\r\n    borderRadius: \"0.3rem\",\r\n    marginLeft: \"1.2rem\",\r\n    textDecoration: \"none\",\r\n    padding: \"12px 15px \",\r\n    width: resp ? \"22rem\" :  \"28rem\",\r\n    height: \"3.1875rem\",\r\n    color: \"white\",\r\n    fontSize: \"1rem\",\r\n    position: \"relative\",\r\n    right: resp ? \"\" : \"1.4rem\",\r\n    \"&:hover\": { backgroundColor: \"#5E9387\", color: \"white\" },\r\n  });\r\n\r\n  const Login = () => {\r\n    return (\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        className=\"login_main_container\"\r\n        style={{\r\n          display: resp2 ? \"flex\" : \"\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            // border : '2px solid red',\r\n            position:'relative',\r\n            top : resp2 ?  '6rem' : '',\r\n          }}\r\n        >\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Box\r\n              sx={{\r\n                maxWidth: \"31.25rem\",\r\n                width: \"31.25rem\",\r\n                height: \"31.25rem\",\r\n                // border: \"2px solid black\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: resp ? \"center\" : \"flex-start\",\r\n                padding: \"1rem\",\r\n                position: \"relative\",\r\n                // left:'4rem',\r\n              }}\r\n            >\r\n              <h1 style={{ margin: \"2rem 0\", color: \"#4A2145\" }}>Sign In</h1>\r\n              <FormControl\r\n                style={{\r\n                  margin:\r\n                    formik.touched.email && formik.errors.email\r\n                      ? \"0\"\r\n                      : \"0 0 1rem 0\",\r\n                  width: resp ? \"40ch\" : \"50ch\",\r\n                }}\r\n                variant=\"outlined\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Email\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"email\"\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <EmailOutlinedIcon />\r\n                    </InputAdornment>\r\n                  }\r\n                  type=\"email\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                />\r\n              </FormControl>\r\n              {formik.touched.email && formik.errors.email ? (\r\n                <div style={{ color: \"red\", marginBottom: \"2rem\" }}>\r\n                  {formik.errors.email}\r\n                </div>\r\n              ) : null}\r\n\r\n              <FormControl\r\n                sx={{ width: resp ? \"40ch\" : \"50ch\", margin: \"1rem 0 0.5 0\" }}\r\n                variant=\"outlined\"\r\n                //   value={user.password}\r\n                //   onChange={handleChange}\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.password && Boolean(formik.errors.password)\r\n                }\r\n                helperText={formik.touched.password && formik.errors.password}\r\n                required\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Password\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password\"\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  label=\"Password\"\r\n                  name=\"password\"\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        // onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                      >\r\n                        {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n              {formik.touched.password && formik.errors.password ? (\r\n                <div style={{ color: \"red\" }}>{formik.errors.password}</div>\r\n              ) : null}\r\n\r\n              <div style={{ display: \"flex\" }}>\r\n                <SignupButton type=\"submit\">Log in</SignupButton>\r\n              </div>\r\n\r\n              <div style={{ }}>\r\n                <span style={{ color: \"gray\", margin: \"0.6rem 0\" }}>\r\n                  Don't have an account?\r\n                  <Link to=\"/Signup\" style={{ textDecoration: \"none\" }}>\r\n                    <a\r\n                      href=\"/\"\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                        color: \"#4A2145\",\r\n                        margin: \"0 0.7rem\",\r\n                        fontWeight: \"32.25rem\",\r\n                      }}\r\n                      // onClick={changeFRegStat}\r\n                    >\r\n                      Sign Up\r\n                    </a>\r\n                  </Link>\r\n                </span>\r\n              </div>\r\n            </Box>\r\n          </form>\r\n        </Grid>\r\n        <Grid item xs={6} className=\"img1 c\">\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              position:'relative',\r\n              top:'10%'\r\n            }}\r\n          >\r\n            <p id=\"internText\">Internship</p>\r\n            <img src={undrawImg} alt=\"internship_image\" />\r\n            <h3 style={{ color: \"white\", margin: \"2rem 0 0.5rem 0\" }}>\r\n              Welcome Back\r\n            </h3>\r\n            <p style={{ color: \"white\", margin: \"0\" }}>\r\n              Just a couple of clicks and we start\r\n            </p>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {Login()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\PostResearch.jsx",[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\Courses.jsx",["144","145","146","147","148","149","150","151","152"],[],"import ResponsiveDrawer from \"../utility/ResponsiveDrawer\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Button from \"@mui/material/Button\";\r\nimport courseImg from \"../images/courseImg.png\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport AccessTimeFilledOutlinedIcon from \"@mui/icons-material/AccessTimeFilledOutlined\";\r\nimport StarHalfIcon from \"@mui/icons-material/StarHalf\";\r\nimport * as React from \"react\";\r\nimport { Paper } from \"@mui/material\";\r\nimport star from \"../images/star.png\";\r\nimport time from \"../images/time.png\";\r\nimport Footer from \"../utility/Footer\";\r\nimport { useEffect, useState } from \"react\";\r\nimport NavBar from \"../utility/NavBar\"\r\n\r\nconst Courses = () => {\r\n  // checking local Storage after each update\r\n  var [isDrawerOpen, setIsDrawerOpen] = useState(true);\r\n\r\n  window.onstorage = () => {\r\n    setIsDrawerOpen(JSON.parse(window.localStorage.getItem(\"drawerOpen\")));\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div style={{display:'flex', flexDirection:'column', backgroundColor:'#e0e0e0'}}>\r\n\r\n      {/* <NavBar/> */}\r\n      <ResponsiveDrawer drawerHeading={'All Courses'}/>\r\n      {/* {ResponsiveDrawer({ drawerHeading: 'All Courses' })} */}\r\n      <div\r\n        className=\"coursesContainer\"\r\n        style={{ marginLeft: isDrawerOpen ? \"245px\" : \"10px\" }}\r\n      >\r\n        <Card\r\n          sx={{\r\n            padding: \"1rem\",\r\n            maxWidth: 345,\r\n            width: \"22rem\",\r\n            height: \"22rem\",\r\n            margin:'0.5rem'\r\n          }}\r\n        >\r\n          <CardMedia\r\n            component=\"img\"\r\n            alt=\"green iguana\"\r\n            height=\"140\"\r\n            style={{ borderRadius: \"0.5rem\", marginBottom: \"0\" }}\r\n            image={courseImg}\r\n          />\r\n\r\n          <CardContent>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                marginBottom: \"1rem\",\r\n              }}\r\n            >\r\n              <button\r\n                style={{\r\n                  width: \"8rem\",\r\n                  height: \"1.8rem\",\r\n                  color: \"#85D1A0\",\r\n                  backgroundColor: \"rgb(215 236 222)\",\r\n                  borderRadius: \"0.4rem\",\r\n                  margin: \"0 1.5rem 0 0\",\r\n                  border: \"none\",\r\n                }}\r\n              >\r\n                Web \r\n              </button>\r\n              <span style={{ textAlign: \"right\" }}>Harvard University</span>\r\n            </div>\r\n\r\n            <Typography\r\n              style={{\r\n                fontFamily: \"Inter\",\r\n                fontStyle: \"normal\",\r\n                fontWeight: \"600\",\r\n                fontSize: \"1.2rem\",\r\n                textAlign: \"start\",\r\n                // float:'left'\r\n                // lineHeight: \"1rem\",\r\n              }}\r\n            >\r\n              ReactJS with Node\r\n            </Typography>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                margin: \"1rem 0\",\r\n              }}\r\n            >\r\n              <img\r\n                src={star}\r\n                alt=\"star\"\r\n                style={{ width: \"1.3rem\", height: \"1.3rem\" }}\r\n              />\r\n              <span style={{ margin: \"0 20px 0 4px\" }}>4.5</span>\r\n              <img\r\n                src={time}\r\n                alt=\"time\"\r\n                style={{ width: \"1.3rem\", height: \"1.3rem\" }}\r\n              />\r\n              <span style={{ margin: \"0 20px 0 4px\" }}>3 months</span>\r\n              <Button\r\n                style={{\r\n                  borderRadius: \"4px\",\r\n                  backgroundColor: \"#85D1A0\",\r\n                  color: \"white\",\r\n                  // marginLeft:'1.5rem'\r\n                }}\r\n              >\r\n                Interested\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Courses;\r\n","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\ApplyResearch.jsx",[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\ProfessorProfile.jsx",["153","154"],[],"import React from 'react'\r\nimport NavBarProfessor from '../utility/NavBarProfessor';\r\nimport './ProfessorProfile.css'\r\nimport searchicon from '../images/search-icon.svg'\r\nimport Textarea from '../utility/Textarea'\r\n\r\nconst ProfessorProfile = () => {\r\n  return (\r\n    <div style={{background:\"#E8FCFE\", height:\"94.5vh\", width:\"100%\"}}>\r\n        <NavBarProfessor />\r\n        <div className='total-applicants'>Total Applicants: 19</div>\r\n        <div className='search-professor-rectangle'>\r\n        <img src={searchicon} className='search-icon-professor'></img>\r\n        <input placeholder='Search' className='input-search-professor'></input>\r\n        </div>\r\n        <button className='post-button-professor'>\r\n            Post an Internship\r\n          </button>\r\n          <div className='table'>\r\n            <ul>\r\n                <li className='full-name'>Full name</li>\r\n                <li className='hiring-stage'>Hiring Stage</li>\r\n                <li className='applied-date'>Applied Date</li>\r\n                <li className='action'>Action</li>\r\n            </ul>\r\n            <div className='line-1-table'></div>\r\n            <ul className='row'>\r\n                <li className='student-name'>Kashish Gandhi</li>\r\n                <li className='stage' style={{border:'1px solid #EBC351',color:'#EBC351'}}>Interviewed</li>\r\n                <li className='student-applied-date'>13/05/2023</li>\r\n                <li className='see-resume'>See Resume</li>\r\n            </ul>\r\n            <ul className='row'style={{background: '#F6F6F6'}}>\r\n                <li className='student-name'>Kashish Gandhi</li>\r\n                <li className='stage' style={{border:'1px solid  #6255A5',color:' #6255A5'}}>Shortlisted</li>\r\n                <li className='student-applied-date'>13/05/2023</li>\r\n                <li className='see-resume'>See Resume</li>\r\n                \r\n            </ul>\r\n            <ul className='row'>\r\n                <li className='student-name'>Kashish Gandhi</li>\r\n                <li className='stage' style={{border:'1px solid #00BF44',color:'#00BF44'}}>Hired</li>\r\n                <li className='student-applied-date'>13/05/2023</li>\r\n                <li className='see-resume'>See Resume</li>\r\n            </ul>\r\n            <ul className='row'style={{background: '#F6F6F6'}}>\r\n                <li className='student-name'>Kashish Gandhi</li>\r\n                <li className='stage' style={{border:'1px solid  #C31616',color:' #C31616'}}>Declined</li>\r\n                <li className='student-applied-date'>13/05/2023</li>\r\n                <li className='see-resume'>See Resume</li>\r\n            </ul>\r\n            <ul className='row'>\r\n                <li className='student-name'>Kashish Gandhi</li>\r\n                <li className='stage' style={{border:'1px solid #EBC351',color:'#EBC351'}}>Interviewed</li>\r\n                <li className='student-applied-date'>13/05/2023</li>\r\n                <li className='see-resume'>See Resume</li>\r\n            </ul>\r\n            <ul className='row'style={{background: '#F6F6F6'}}>\r\n                <li className='student-name'>Kashish Gandhi</li>\r\n                <li className='stage' style={{border:'1px solid #EBC351',color:'#EBC351'}}>Interviewed</li>\r\n                <li className='student-applied-date'>13/05/2023</li>\r\n                <li className='see-resume'>See Resume</li>\r\n            </ul>\r\n            <ul className='row'>\r\n                <li className='student-name'>Kashish Gandhi</li>\r\n                <li className='stage' style={{border:'1px solid #EBC351',color:'#EBC351'}}>Interviewed</li>\r\n                <li className='student-applied-date'>13/05/2023</li>\r\n                <li className='see-resume'>See Resume</li>\r\n            </ul>\r\n           \r\n          </div>\r\n\r\n          <div className='professor-info'>\r\n          <img src=\"../images/Kashishpic.jpg\" className=\"professor-profile-pic\"></img>\r\n          <div className='professor-name'>Kashish Gandhi</div>\r\n          <div className=\"basic-info-professor\">Basic Information</div>\r\n          <div className='professor-age'>AGE</div>\r\n          <div className='professor-age-data'>25</div>\r\n          <div className='professor-qualification'>QUALIFICATION</div>\r\n          <div className='professor-qualification-data'>P.H.D</div>\r\n          <div className='professor-position'>POSITION</div>\r\n          <div className='professor-position-data'>PROFESSOR</div>\r\n          <div className='professor-biodata'>BIODATA</div>\r\n          <div className='professor-biodata-data'>Lorem ipsum loreum ipsum Lorem ipsum loreum ipsum</div>\r\n          <div className=\"add-notes-professor\">Add Notes</div>\r\n            <Textarea placeholder=\"Add notes for future reference\" style={{marginLeft:'0rem', marginTop:'0.5rem', width:'28.5rem',height:'4.27rem'}} />\r\n            <button className='search-button-notes-professor'>\r\n            Add Notes\r\n          </button>\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfessorProfile","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\PostInternship.jsx",["155","156","157"],[],"import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Box, Button, TextField } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useEffect } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport humanAI from \"../images/humanAI.png\";\r\nimport \"./InternshipForm.css\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { skillsOptions } from \"../docs/data.ts\";\r\nimport Select from \"react-select\";\r\n\r\nconst validationSchema = yup.object({\r\n  position: yup.string(\"ML Engineer\").required(\"Position is required\"),\r\n  remote: yup.string(\"Remote\").required(\"Required Field\"),\r\n  duration: yup.string(\"1 month\").required(\"Required Field\"),\r\n  positionsOpen: yup.string(\"1\").required(\"Position is required\"),\r\n  stipend: yup.string(\"3000\").required(\"Stipend is required\"),\r\n  skillsRequired: yup.string(\"React.js\").required(\"Required Field\"),\r\n});\r\n\r\nconst PostInternshipForm = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      position: \"\",\r\n      remote: \"\",\r\n      duration: \"\",\r\n      positionsOpen: \"\",\r\n      stipend: \"\",\r\n      skillsRequired: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n\r\n  // adding event listener for responsiveness\r\n  const [width, setWindowWidth] = useState(0);\r\n\r\n  const color = \"#4A2145\";\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    return () => window.removeEventListener(\"resize\", updateDimensions);\r\n  }, []);\r\n\r\n  const updateDimensions = () => {\r\n    const width = window.innerWidth;\r\n    setWindowWidth(width);\r\n  };\r\n\r\n  const responsiveness = { responsive: width < 1100 };\r\n  const resp = responsiveness.responsive;\r\n\r\n  const responsiveness2 = { responsive: width < 850 };\r\n  const resp2 = responsiveness2.responsive;\r\n\r\n  const Post = styled(Button)({\r\n    backgroundColor: \"#85D1A0\",\r\n    margin: \"1rem\",\r\n    borderRadius: \"0.3rem\",\r\n    marginLeft: \"1.2rem\",\r\n    textDecoration: \"none\",\r\n    padding: \"12px 15px \",\r\n    width: resp ? \"42ch\" : \"50ch\",\r\n    height: \"3.1875rem\",\r\n    color: \"white\",\r\n    fontSize: \"1rem\",\r\n    position: \"relative\",\r\n    right: resp ? \"\" : \"1.4rem\",\r\n    \"&:hover\": { backgroundColor: \"#5E9387\", color: \"white\" },\r\n  });\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const [selectedValues, setSelectedValues] = useState([]);\r\n\r\n  const handleSelectChange = async (selectedOptions) => {\r\n    setSelectedValues(() => selectedOptions);\r\n  };\r\n\r\n  const selectStyles = {\r\n    control: (provided) => ({\r\n      ...provided,\r\n      width: resp ? \"42ch\" : \"50ch\",\r\n      // height: selectedValues.length > 3 ? \"\" : \"3.5rem\",\r\n      borderRadius: \"0.3rem\",\r\n    }),\r\n    placeholder: (provided) => ({\r\n      ...provided,\r\n      textAlign: \"left\", // set the text alignment of the placeholder to left\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      className=\"postInternship_main_container\"\r\n      style={{\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: resp ? \"1rem 0rem\" : \"2rem 7rem\",\r\n        backgroundColor: \"#b2ebf2\",\r\n      }}\r\n    >\r\n      <Grid\r\n        item\r\n        xs={12} md={6}\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Box\r\n            sx={{\r\n              // maxWidth: \"31rem\",\r\n              // width: \"31rem\",\r\n              // height: \"38rem\",\r\n              // border: \"2px solid black\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: resp ? \"center\" : \"flex-start\",\r\n              padding: \"1rem\",\r\n              position: \"relative\",\r\n              // left:'4rem',\r\n            }}\r\n          >\r\n            <h1 className=\"formHeader\">Post Internship</h1>\r\n\r\n            <TextField\r\n              id=\"position\"\r\n              type=\"text\"\r\n              label=\"Position\"\r\n              placeholder=\"Position\"\r\n              name=\"position\"\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.position && Boolean(formik.errors.position)}\r\n              helperText={formik.touched.position && formik.errors.position}\r\n              required\r\n              style={{ marginBottom: \"1rem\", width: resp ? \"42ch\" : \"50ch\" }}\r\n            />\r\n\r\n            <TextField\r\n              id=\"remote\"\r\n              type=\"text\"\r\n              label=\"Remote\"\r\n              placeholder=\"Remote/Onsite\"\r\n              name=\"remote\"\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.remote && Boolean(formik.errors.remote)}\r\n              helperText={formik.touched.remote && formik.errors.remote}\r\n              required\r\n              style={{ marginBottom: \"1rem\", width: resp ? \"42ch\" : \"50ch\" }}\r\n            />\r\n\r\n            <TextField\r\n              id=\"duration\"\r\n              type=\"number\"\r\n              label=\"Duration (in months)\"\r\n              placeholder=\"Duration\"\r\n              name=\"duration\"\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.duration && Boolean(formik.errors.duration)}\r\n              helperText={formik.touched.duration && formik.errors.duration}\r\n              required\r\n              style={{ marginBottom: \"1rem\", width: resp ? \"42ch\" : \"50ch\" }}\r\n            />\r\n\r\n            <TextField\r\n              id=\"positionsOpen\"\r\n              type=\"number\"\r\n              label=\"Positions Open\"\r\n              placeholder=\"Positions Open\"\r\n              name=\"positionsOpen\"\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.positionsOpen &&\r\n                Boolean(formik.errors.positionsOpen)\r\n              }\r\n              helperText={\r\n                formik.touched.positionsOpen && formik.errors.positionsOpen\r\n              }\r\n              required\r\n              style={{ marginBottom: \"1rem\", width: resp ? \"42ch\" : \"50ch\" }}\r\n            />\r\n\r\n            <TextField\r\n              id=\"stipend\"\r\n              type=\"number\"\r\n              label=\"Stipend\"\r\n              placeholder=\"Stipend\"\r\n              name=\"stipend\"\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.stipend && Boolean(formik.errors.stipend)}\r\n              helperText={formik.touched.stipend && formik.errors.stipend}\r\n              required\r\n              style={{ marginBottom: \"1rem\", width: resp ? \"42ch\" : \"50ch\" }}\r\n            />\r\n\r\n            <Select\r\n              required\r\n              className=\"skillsRequired\"\r\n              closeMenuOnSelect={false}\r\n              components={animatedComponents}\r\n              // defaultValue={[skillsOptions[4], skillsOptions[5]]}\r\n              isMulti\r\n              options={skillsOptions}\r\n              theme={(theme) => ({\r\n                ...theme,\r\n                borderRadius: 0,\r\n                colors: {\r\n                  ...theme.colors,\r\n                  primary25: \"#b2ebf2\",\r\n                  primary: \"black\",\r\n                },\r\n              })}\r\n              styles={selectStyles}\r\n              onChange={handleSelectChange}\r\n              placeholder=\"Required skills\"\r\n            />\r\n\r\n            <div\r\n            // style={{ display: \"flex\" }}\r\n            >\r\n              <Post type=\"submit\">Post Internship</Post>\r\n            </div>\r\n          </Box>\r\n        </form>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <img\r\n          src={humanAI}\r\n          alt=\"humanAI\"\r\n          style={{\r\n            height: resp ? \"35rem\" : \"38rem\",\r\n            width: resp ? \"26rem\" : \"35rem\",\r\n          }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst PostInternship = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <PostInternshipForm />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostInternship;\r\n","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\UserProfile.jsx",["158","159","160","161","162"],[],"import \"./UserProfile.css\";\r\nimport React, { useState, useRef }  from \"react\";\r\nimport NavBar from '../utility/NavBar'\r\nimport Textarea from '../utility/Textarea';\r\nimport upload from '../images/upload.svg'\r\nimport eye from '../images/eye.svg'\r\n\r\nconst UserProfile = () => {\r\n  const [fileUrl, setFileUrl] = useState(null);\r\n\r\n  const handleFileInputChange = async (e) => {\r\n    const selectedFile = e.target.files[0];\r\n  \r\n    if (!selectedFile) {\r\n      return;\r\n    }\r\n  \r\n    const fileUrl = URL.createObjectURL(selectedFile);\r\n    setFileUrl(fileUrl);\r\n  };\r\n\r\n  const handleViewResumeClick = () => {\r\n    if (!fileUrl) {\r\n      return;\r\n    }\r\n\r\n    window.open(fileUrl, '_blank');\r\n  };\r\n\r\n  return (\r\n    <div style={{background:\"#E8FCFE\", height:\"100vh\", width:\"100%\"}}>\r\n        <NavBar />\r\n        <div className=\"profile-rectangle\">\r\n            <img src=\"../images/Kashishpic.jpg\" className=\"profile-pic-enlarged\"></img>\r\n            <div className=\"user-name\">Kashish Gandhi</div>\r\n            <div className=\"user-job\">Frontend Developer</div>\r\n            <div className=\"user-description\">Introduction about me loreum ipsum Introduction about me loreum ipsum Introduction about me loreum ipsum </div>\r\n            <div className=\"user-skills\">Skills</div>\r\n            <div className=\"skill1\">React</div>\r\n            <div className=\"skill2\">User Interface</div>\r\n            <div className=\"skill3\">Product Management</div>\r\n            <div className=\"skill4\">Machine Learning</div>\r\n            <div className=\"skill5\">UI Design</div>\r\n            <div className=\"skill6\">UX</div>\r\n            <div className=\"add-notes\">Add Notes</div>\r\n            <Textarea placeholder=\"Add notes for future reference\" />\r\n            <button className='search-button-notes'>\r\n            Add Notes\r\n          </button>\r\n        </div>\r\n        <div className=\"info-rectangle1\">\r\n          <div className=\"basic-info\">Basic Information</div>\r\n          <div className=\"age\">AGE</div>\r\n        \r\n          <div className=\"sapid\">SAPID</div>\r\n           <div className=\"dept\">DEPARTMENT</div>\r\n         <div className=\"phone\">PHONE NUMBER</div>\r\n           <div className=\"email\">EMAIL</div>\r\n           <div className=\"age1\">19</div> \r\n           <div className=\"sapid1\">60004210036</div> \r\n           <div className=\"dept1\">Computer Engineering</div> \r\n           <div className=\"phone1\">9619121679</div> \r\n           <div className=\"email1\">kashishgandhi6112003@gmail.com</div>\r\n          \r\n            <label htmlFor=\"resume-input\" className=\"upload-resume\">\r\n              <img src={upload} style={{ marginRight: '0.5rem' }}></img>\r\n              Upload Resume\r\n            </label>\r\n            <input\r\n              id=\"resume-input\"\r\n              type=\"file\"\r\n              accept=\".pdf\"\r\n              onChange={handleFileInputChange}\r\n              style={{ display: 'none' }}\r\n            />\r\n        \r\n          {fileUrl && (\r\n            <button className=\"view-resume\" onClick={handleViewResumeClick}>\r\n              <img src={eye} style={{ marginRight: '0.5rem' }}></img>\r\n              View Resume\r\n            </button>\r\n          )}\r\n          {!fileUrl && (\r\n            <button className=\"view-resume\" disabled>\r\n              <img src={eye} style={{ marginRight: '0.5rem' }}></img>\r\n              View Resume\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className=\"info-rectangle2\">\r\n          \r\n        </div>\r\n        <div className=\"info-rectangle3\">\r\n          \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfile","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\LandingPage.jsx",[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\NavBarProfessor.jsx",["163"],[],"import React from 'react'\r\nimport './NavBarProfessor.css'\r\nimport dropdown from \"../images/dropdown.svg\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NavBarProfessor = () => {\r\n  return (\r\n   \r\n      <div className='navbar-rectangle-professor'>\r\n        <ul>\r\n          <li className='logo'>Internship Portal</li>\r\n       \r\n          <li className='home-professor'>Home</li>\r\n         <li className='post-professor'><Link to=\"/PostInternship\"  className='post-professor1'>Post Internships/Research paper</Link></li>\r\n           <img src={dropdown} className='dropdown-professor'></img>\r\n           <li className='username-professor'><Link to=\"/ProfessorProfile\" className='username-professor1'>Kashish Gandhi</Link></li>\r\n           <Link to=\"/ProfessorProfile\"><li className='profile-pic-professor'></li> </Link>\r\n        </ul>\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nexport default NavBarProfessor","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\Header.jsx",["164","165","166","167","168"],[],"import React from 'react'\r\nimport NavBar from './NavBar'\r\nimport './Header.css'\r\nimport lines1 from \"../images/bg-lines1.svg\"\r\nimport lines2 from \"../images/bg-lines2.svg\"\r\nimport searchicon from \"../images/search-icon.svg\"\r\nimport humanicon from \"../images/humanicon.svg\"\r\nimport highlightedunderline from \"../images/highlightedunderline.svg\"\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div style={{height: '33rem', backgroundColor: '#E8FCFE'}}>\r\n\r\n        <NavBar />\r\n        <img src={lines1} className='bg-lines1'></img>\r\n        <img src={lines2} className='bg-lines2'></img>\r\n\r\n        <div className='input-rectangle'>\r\n          <img src={searchicon} className='search-icon'></img>\r\n          <input placeholder='Course name or keyword' className='input1'></input>\r\n          <div className='vertical-line'></div>\r\n          <img src={humanicon} className='human-icon'></img>\r\n          <input placeholder='University' className='input2' ></input>\r\n          <button className='search-button'>\r\n            Search\r\n          </button>\r\n        </div>\r\n        <div className='text'>Popular : Machine Learning by Harvard, xyz course from Stanford</div>\r\n        <div className='subtitle'>Enhance your skills by learning courses from the faculty in top universities</div>\r\n        <div className='title'>Find your&nbsp; <span> dream course</span></div>\r\n        <img src={highlightedunderline} className='highlightedunderline'></img>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Header","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\Footer.jsx",["169","170","171","172"],[],"import './Footer.css'\r\nimport React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return ( \r\n        <>\r\n        <hr/>\r\n    <footer class=\"site-footer\">\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-12 col-md-6 about\">\r\n            <h6 class=\"highlight\">Internship Portal</h6>\r\n            <p class=\"text-justify\">A platform dedicated to providing students with valuable opportunities to enhance their academic and professional skills. Internship Portal offer a diverse range of internships, courses, and research paper writing opportunities under experienced professors.  Join us today and take the first step towards a successful career! </p>\r\n          </div>\r\n\r\n          <div class=\"col-xs-6 col-md-3\">\r\n            <h6>Courses</h6>\r\n            <ul class=\"footer-links\">\r\n              <li><a href=\"/\">Classroom courses</a></li>\r\n              <li><a href=\"/\">Online courses</a></li>\r\n              <li><a href=\"/\">E-learning courses</a></li>\r\n              <li><a href=\"/\">Video courses</a></li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div class=\"col-xs-6 col-md-3\">\r\n            <h6>Quick Links</h6>\r\n            <ul class=\"footer-links\">\r\n              <li><a href=\"/\">Home</a></li>\r\n              <li><a href=\"/\">Internships</a></li>\r\n              <li><a href=\"/\">All Courses</a></li>\r\n              <li><a href=\"/\">Interview Prep</a></li>\r\n              <li><a href=\"/\">Programs</a></li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <hr/>\r\n      </div>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8 col-sm-6 col-xs-12\">\r\n            <p class=\"copyright-text\">Copyright &copy; 2023 Internship Portal | All Rights Reserved \r\n            </p>\r\n          </div>\r\n\r\n          <div class=\"col-md-4 col-sm-6 col-xs-12\">\r\n            <ul class=\"social-icons\">\r\n              <li><a Class=\"facebook\" href=\"#\"><i class=\"fa fa-facebook\"></i></a></li>\r\n              <li><a Class=\"twitter\" href=\"#\"><i class=\"fa fa-twitter\"></i></a></li>\r\n              <li><a Class=\"dribbble\" href=\"#\"><i class=\"fa fa-dribbble\"></i></a></li>\r\n              <li><a Class=\"linkedin\" href=\"#\"><i class=\"fa fa-linkedin\"></i></a></li>   \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n</footer>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Footer;","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\docs\\data.ts",[],[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\ResponsiveDrawer.jsx",["173","174"],[],"import * as React from \"react\";\r\n\r\nimport { styled, useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport MuiAppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\r\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport List from \"@mui/material/List\";\r\nimport Footer from \"./Footer\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nvar drawerWidth = 240;\r\n\r\nconst Main = styled(\"main\", { shouldForwardProp: (prop) => prop !== \"open\" })(\r\n  ({ theme, open }) => ({\r\n    flexGrow: 1,\r\n    padding: 0,\r\n    // padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: `-${drawerWidth}px`,\r\n    ...(open && {\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      margin: \"0 0 6px 0\",\r\n      border: \"2px solid green\",\r\n      padding: 0,\r\n    }),\r\n  })\r\n);\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== \"open\",\r\n})(({ theme, open }) => ({\r\n  transition: theme.transitions.create([\"margin\", \"width\"], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    // width: `calc(10% - ${drawerWidth}px)`,\r\n    // border: \"2px solid red\",\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: `${drawerWidth}px`,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeInOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  // border: \"2px solid blue\",\r\n  alignItems: \"center\",\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n  justifyContent: \"flex-end\",\r\n}));\r\n\r\nexport default function ResponsiveDrawer({ drawerHeading }) {\r\n  const theme = useTheme();\r\n\r\n  // open, setOpen is respect to the drawer not List\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    window.localStorage.setItem(\"drawerOpen\", JSON.stringify(open));\r\n    window.dispatchEvent(new Event(\"storage\"));\r\n  });\r\n\r\n  // openList is respect to lists inside drawer\r\n  const [openList, setOpenList] = React.useState([false, false, false, false]);\r\n\r\n  const handleClickList = (index) => {\r\n    const copyList = [...openList];\r\n    copyList[index] = !copyList[index];\r\n    setOpenList(copyList);\r\n  };\r\n\r\n  const [checked, setChecked] = React.useState([[], [], [], []]);\r\n\r\n  const handleToggle = (listIndex, value) => () => {\r\n    console.log(`Checkbox clicked for listIndex ${listIndex} - value ${value}`);\r\n    const currentIndex = checked[listIndex].includes(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === false) {\r\n      newChecked[listIndex].push(value);\r\n    } else {\r\n      const indexToRemove = newChecked[listIndex].indexOf(value);\r\n      newChecked[listIndex].splice(indexToRemove, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const InternshipTypes = [\"Full-time\", \"Part-time\", \"Remote\", \"Hybrid\"];\r\n  const Category = [\r\n    \"Design\",\r\n    \"Web Development\",\r\n    \"App Development\",\r\n    \"Marketing\",\r\n    \"Design\",\r\n    \"Data Science\",\r\n    \"AI/ML\",\r\n    \"Robotics\",\r\n  ];\r\n  const Experience = [\r\n    \"0-6 months\",\r\n    \"6-12 months\",\r\n    \"1-2 years\",\r\n    \"2 years or above\",\r\n  ];\r\n  const StipendRange = [\r\n    \"0 - 1,000\",\r\n    \"1,000 - 5,000\",\r\n    \"5,000 - 10,000\",\r\n    \"10,000 - 15,000\",\r\n    \"15,000 or above\",\r\n  ];\r\n\r\n  const NestedList = ({ SidebarList, listIndex, Listname }) => {\r\n    // console.log(`list name = ${Listname}`);\r\n    return (\r\n      <>\r\n        {/* <p>{` List is ${SidebarList}, ${listIndex}, ${Listname} `}</p> */}\r\n        <List\r\n          sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}\r\n          component=\"nav\"\r\n          aria-labelledby=\"nested-list-subheader\"\r\n        >\r\n          <ListItemButton onClick={() => handleClickList(listIndex)}>\r\n            <ListItemText primary={Listname} />\r\n            {openList[listIndex] ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItemButton>\r\n          <Collapse in={openList[listIndex]} timeout=\"auto\" unmountOnExit>\r\n            <List\r\n              sx={{\r\n                width: \"100%\",\r\n                maxWidth: 360,\r\n                bgcolor: \"background.paper\",\r\n                // border: \"2px solid gold\",\r\n                height: \"auto\",\r\n              }}\r\n            >\r\n              {SidebarList.map((type, value) => {\r\n                const labelId = `checkbox-list-label-${value}`;\r\n\r\n                // this return is of Nested list\r\n                return (\r\n                  <ListItem\r\n                    key={value}\r\n                    secondaryAction={\r\n                      <IconButton edge=\"end\" aria-label=\"comments\"></IconButton>\r\n                    }\r\n                    disablePadding\r\n                  >\r\n                    <ListItemButton\r\n                      role={undefined}\r\n                      onClick={handleToggle(listIndex, value)}\r\n                      dense\r\n                    >\r\n                      <ListItemIcon>\r\n                        <Checkbox\r\n                          edge=\"start\"\r\n                          checked={checked[listIndex].includes(value) === true}\r\n                          tabIndex={-1}\r\n                          disableRipple\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </ListItemIcon>\r\n                      <ListItemText id={labelId} primary={`${type}`} />\r\n                    </ListItemButton>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </Collapse>\r\n        </List>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ display: \"flex\" }}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"relative\"\r\n          open={open}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            boxShadow: \"none\",\r\n          }}\r\n        >\r\n          <Toolbar sx={{ marginLeft: \"5rem\" }}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              sx={{\r\n                mr: 2,\r\n                ...(open && { display: \"none\" }),\r\n                color: \"black\",\r\n              }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n              style={{\r\n                fontFamily: \"Arya\",\r\n                fontStyle: \"normal\",\r\n                fontWeight: \"700\",\r\n                fontSize: \"1.5rem\",\r\n                lineHeight: \"58px\",\r\n                color: \"black\",\r\n              }}\r\n            >\r\n              {drawerHeading}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          sx={{\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            \"& .MuiDrawer-paper\": {\r\n              width: drawerWidth,\r\n              boxSizing: \"border-box\",\r\n            },\r\n          }}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n        >\r\n          <DrawerHeader>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === \"ltr\" ? (\r\n                <ChevronLeftIcon />\r\n              ) : (\r\n                <ChevronRightIcon />\r\n              )}\r\n            </IconButton>\r\n          </DrawerHeader>\r\n          <Divider />\r\n\r\n          {\r\n            <NestedList\r\n              SidebarList={InternshipTypes}\r\n              listIndex={0}\r\n              Listname=\"Internship Type\"\r\n            />\r\n          }\r\n          {\r\n            <NestedList\r\n              SidebarList={Category}\r\n              listIndex={1}\r\n              Listname=\"Category\"\r\n            />\r\n          }\r\n          {\r\n            <NestedList\r\n              SidebarList={Experience}\r\n              listIndex={2}\r\n              Listname=\"Experience\"\r\n            />\r\n          }\r\n          {\r\n            <NestedList\r\n              SidebarList={StipendRange}\r\n              listIndex={3}\r\n              Listname=\"Stipend Range\"\r\n            />\r\n          }\r\n        </Drawer>\r\n        <Main open={open}>\r\n          <DrawerHeader />\r\n        </Main>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\Textarea.jsx",[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\landingNavBar.jsx",[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\Toggle.js",[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\components\\PortalDrawer.js",["175"],[],"import { useMemo, useCallback } from \"react\";\n\nimport { createPortal } from \"react-dom\";\nimport \"./PortalDrawer.css\";\n\nconst PortalDrawer = ({\n  children,\n  overlayColor,\n  placement = \"Left\",\n  onOutsideClick,\n  zIndex = 100,\n}) => {\n  const drawerStyle = useMemo(() => {\n    const style = {};\n    style.zIndex = zIndex;\n\n    if (overlayColor) {\n      style.backgroundColor = overlayColor;\n    }\n\n    switch (placement) {\n      case \"Left\":\n        style.alignItems = \"flex-start\";\n        break;\n      case \"Right\":\n        style.alignItems = \"flex-end\";\n        break;\n      case \"Top\":\n        style.alignItems = \"center\";\n        break;\n      case \"Bottom\":\n        style.alignItems = \"center\";\n        style.justifyContent = \"flex-end\";\n        break;\n    }\n\n    return style;\n  }, [placement, overlayColor, zIndex]);\n\n  const onOverlayClick = useCallback(\n    (e) => {\n      if (onOutsideClick && e.target.classList.contains(\"portalPopupOverlay\")) {\n        onOutsideClick();\n      }\n      e.stopPropagation();\n    },\n    [onOutsideClick]\n  );\n\n  return (\n    <DrawerContainer>\n      <div\n        className=\"portalPopupOverlay\"\n        style={drawerStyle}\n        onClick={onOverlayClick}\n      >\n        {children}\n      </div>\n    </DrawerContainer>\n  );\n};\n\nexport const DrawerContainer = ({ children, containerId = \"portals\" }) => {\n  let portalsDiv = document.getElementById(containerId);\n  if (!portalsDiv) {\n    portalsDiv = document.createElement(\"div\");\n    portalsDiv.setAttribute(\"id\", containerId);\n    document.body.appendChild(portalsDiv);\n  }\n\n  return createPortal(children, portalsDiv);\n};\nexport default PortalDrawer;\n","C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\NavBar.jsx",[],[],"C:\\Users\\Kashish Gandhi\\Desktop\\InternshipPortal_Unicode\\portal-frontend\\src\\utility\\FrameComponent.js",[],[],{"ruleId":"176","severity":1,"message":"177","line":1,"column":8,"nodeType":"178","messageId":"179","endLine":1,"endColumn":12},{"ruleId":"176","severity":1,"message":"180","line":16,"column":10,"nodeType":"178","messageId":"179","endLine":16,"endColumn":21},{"ruleId":"176","severity":1,"message":"181","line":16,"column":23,"nodeType":"178","messageId":"179","endLine":16,"endColumn":36},{"ruleId":"176","severity":1,"message":"182","line":17,"column":16,"nodeType":"178","messageId":"179","endLine":17,"endColumn":27},{"ruleId":"176","severity":1,"message":"183","line":20,"column":10,"nodeType":"178","messageId":"179","endLine":20,"endColumn":14},{"ruleId":"176","severity":1,"message":"184","line":64,"column":9,"nodeType":"178","messageId":"179","endLine":64,"endColumn":14},{"ruleId":"176","severity":1,"message":"185","line":118,"column":10,"nodeType":"178","messageId":"179","endLine":118,"endColumn":23},{"ruleId":"176","severity":1,"message":"186","line":119,"column":9,"nodeType":"178","messageId":"179","endLine":119,"endColumn":33},{"ruleId":"176","severity":1,"message":"187","line":5,"column":3,"nodeType":"178","messageId":"179","endLine":5,"endColumn":12},{"ruleId":"176","severity":1,"message":"180","line":15,"column":10,"nodeType":"178","messageId":"179","endLine":15,"endColumn":21},{"ruleId":"176","severity":1,"message":"181","line":15,"column":23,"nodeType":"178","messageId":"179","endLine":15,"endColumn":36},{"ruleId":"176","severity":1,"message":"182","line":16,"column":16,"nodeType":"178","messageId":"179","endLine":16,"endColumn":27},{"ruleId":"176","severity":1,"message":"184","line":53,"column":9,"nodeType":"178","messageId":"179","endLine":53,"endColumn":14},{"ruleId":"176","severity":1,"message":"188","line":73,"column":9,"nodeType":"178","messageId":"179","endLine":73,"endColumn":14},{"ruleId":"176","severity":1,"message":"189","line":3,"column":8,"nodeType":"178","messageId":"179","endLine":3,"endColumn":19},{"ruleId":"176","severity":1,"message":"190","line":9,"column":8,"nodeType":"178","messageId":"179","endLine":9,"endColumn":12},{"ruleId":"176","severity":1,"message":"191","line":10,"column":8,"nodeType":"178","messageId":"179","endLine":10,"endColumn":11},{"ruleId":"176","severity":1,"message":"192","line":11,"column":8,"nodeType":"178","messageId":"179","endLine":11,"endColumn":36},{"ruleId":"176","severity":1,"message":"193","line":12,"column":8,"nodeType":"178","messageId":"179","endLine":12,"endColumn":20},{"ruleId":"176","severity":1,"message":"194","line":14,"column":10,"nodeType":"178","messageId":"179","endLine":14,"endColumn":15},{"ruleId":"176","severity":1,"message":"195","line":17,"column":8,"nodeType":"178","messageId":"179","endLine":17,"endColumn":14},{"ruleId":"176","severity":1,"message":"196","line":18,"column":10,"nodeType":"178","messageId":"179","endLine":18,"endColumn":19},{"ruleId":"176","severity":1,"message":"197","line":19,"column":8,"nodeType":"178","messageId":"179","endLine":19,"endColumn":14},{"ruleId":"198","severity":1,"message":"199","line":13,"column":9,"nodeType":"200","endLine":13,"endColumn":65},{"ruleId":"198","severity":1,"message":"199","line":74,"column":11,"nodeType":"200","endLine":74,"endColumn":81},{"ruleId":"176","severity":1,"message":"184","line":43,"column":9,"nodeType":"178","messageId":"179","endLine":43,"endColumn":14},{"ruleId":"176","severity":1,"message":"201","line":60,"column":9,"nodeType":"178","messageId":"179","endLine":60,"endColumn":14},{"ruleId":"176","severity":1,"message":"202","line":80,"column":10,"nodeType":"178","messageId":"179","endLine":80,"endColumn":24},{"ruleId":"176","severity":1,"message":"203","line":2,"column":27,"nodeType":"178","messageId":"179","endLine":2,"endColumn":33},{"ruleId":"198","severity":1,"message":"199","line":34,"column":13,"nodeType":"200","endLine":34,"endColumn":82},{"ruleId":"198","severity":1,"message":"199","line":66,"column":15,"nodeType":"200","endLine":66,"endColumn":67},{"ruleId":"198","severity":1,"message":"199","line":79,"column":15,"nodeType":"200","endLine":79,"endColumn":64},{"ruleId":"198","severity":1,"message":"199","line":85,"column":15,"nodeType":"200","endLine":85,"endColumn":64},{"ruleId":"198","severity":1,"message":"199","line":15,"column":12,"nodeType":"200","endLine":15,"endColumn":63},{"ruleId":"198","severity":1,"message":"199","line":15,"column":9,"nodeType":"200","endLine":15,"endColumn":49},{"ruleId":"198","severity":1,"message":"199","line":16,"column":9,"nodeType":"200","endLine":16,"endColumn":49},{"ruleId":"198","severity":1,"message":"199","line":19,"column":11,"nodeType":"200","endLine":19,"endColumn":57},{"ruleId":"198","severity":1,"message":"199","line":22,"column":11,"nodeType":"200","endLine":22,"endColumn":55},{"ruleId":"198","severity":1,"message":"199","line":31,"column":9,"nodeType":"200","endLine":31,"endColumn":74},{"ruleId":"204","severity":1,"message":"205","line":48,"column":19,"nodeType":"200","endLine":48,"endColumn":48},{"ruleId":"204","severity":1,"message":"205","line":49,"column":19,"nodeType":"200","endLine":49,"endColumn":47},{"ruleId":"204","severity":1,"message":"205","line":50,"column":19,"nodeType":"200","endLine":50,"endColumn":48},{"ruleId":"204","severity":1,"message":"205","line":51,"column":19,"nodeType":"200","endLine":51,"endColumn":48},{"ruleId":"176","severity":1,"message":"195","line":24,"column":8,"nodeType":"178","messageId":"179","endLine":24,"endColumn":14},{"ruleId":"176","severity":1,"message":"197","line":25,"column":8,"nodeType":"178","messageId":"179","endLine":25,"endColumn":14},{"ruleId":"206","severity":1,"message":"207","line":21,"column":5,"nodeType":"208","messageId":"209","endLine":35,"endColumn":6},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'createTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'useNavigate' is defined but never used.","'blue' is defined but never used.","'color' is assigned a value but never used.","'showCPassword' is assigned a value but never used.","'handleClickShowCPassword' is assigned a value but never used.","'TextField' is defined but never used.","'resp3' is assigned a value but never used.","'CardActions' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'AccessTimeFilledOutlinedIcon' is defined but never used.","'StarHalfIcon' is defined but never used.","'Paper' is defined but never used.","'Footer' is defined but never used.","'useEffect' is defined but never used.","'NavBar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'resp2' is assigned a value but never used.","'selectedValues' is assigned a value but never used.","'useRef' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]